I"<h1 id="reversing-static-eyeless---834-pts">[REVERSING] static EYELESS - 834 pts.</h1>

<p>We’re given a file:</p>

<p><img src="images/static_eyeless_1.png# big" alt="file missing" />
<br />
When the file is run, this is the output:
<img src="images/static_eyeless_2.png# medium" alt="file missing" /></p>

<p><br />
Running it with gdb crashes the debugger since its header is corrupted:
<img src="images/static_eyeless_3.png" alt="file missing" />
But instead of fixing the file header, let’s use another method.</p>

<p><br />
Analyzing the ELF binary with Ghidra. After loading the binary and be analyzed by Ghidra, we check on the symbol tree, under “Functions” folder and select the address that is highlighted: (Address 0x100820)
<img src="images/static_eyeless_4.png# medium" alt="file missing" />
We will be able to see the decompiled code now. These are the interesting parts:</p>
<h3 id="the-encrypted-flag">The encrypted flag:</h3>
<p><img src="images/static_eyeless_4.png# small" alt="file missing" />
<br /></p>

:ET